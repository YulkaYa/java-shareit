services:
  server:
    build: .
    image: shareit-server
    container_name: shareit-server
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shareit
      - SPRING_DATASOURCE_USERNAME=shareit
      - SPRING_DATASOURCE_PASSWORD=shareit

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=shareit
      - POSTGRES_USER=shareit
      - POSTGRES_DB=shareit
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://shareit:shareit@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(512) NOT NULL,
        CONSTRAINT pk_user PRIMARY KEY (id),
        CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
        );
        
        CREATE TABLE IF NOT EXISTS requests (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        requestor_id BIGINT NOT NULL,
        description VARCHAR(255) NOT NULL,
        CONSTRAINT pk_request PRIMARY KEY (id),
        CONSTRAINT fk_requests_to_users FOREIGN KEY(requestor_id) REFERENCES users(id)
        );
        
        CREATE TABLE IF NOT EXISTS items (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        owner_id BIGINT NOT NULL,
        name VARCHAR(255) NOT NULL,
        description VARCHAR(255) NOT NULL,
        is_available boolean  NOT NULL,
        request_id BIGINT,
        CONSTRAINT pk_item PRIMARY KEY (id),
        CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id),
        CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id)
        );
        
        CREATE TABLE IF NOT EXISTS comments (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        item_id BIGINT NOT NULL,
        author_id BIGINT NOT NULL,
        text VARCHAR(255) NOT NULL,
        CONSTRAINT pk_comment PRIMARY KEY (id),
        CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id),
        CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id)
        );
        
        CREATE TABLE IF NOT EXISTS bookings (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        item_id BIGINT NOT NULL,
        booker_id BIGINT NOT NULL,
        status VARCHAR(255) NOT NULL,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        CONSTRAINT pk_booking PRIMARY KEY (id),
        CONSTRAINT fk_booking_to_users FOREIGN KEY(booker_id) REFERENCES users(id),
        CONSTRAINT fk_booking_to_items FOREIGN KEY(item_id) REFERENCES items(id)
        );
        EOSQL